// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0-devel
// 	protoc        v3.11.4
// source: api/grpcapi/grpcapi.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SaveGopherReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SaveGopherReq) Reset() {
	*x = SaveGopherReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpcapi_grpcapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveGopherReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveGopherReq) ProtoMessage() {}

func (x *SaveGopherReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpcapi_grpcapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveGopherReq.ProtoReflect.Descriptor instead.
func (*SaveGopherReq) Descriptor() ([]byte, []int) {
	return file_api_grpcapi_grpcapi_proto_rawDescGZIP(), []int{0}
}

func (x *SaveGopherReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SaveGopherReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SaveGopherResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SaveGopherResp) Reset() {
	*x = SaveGopherResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpcapi_grpcapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveGopherResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveGopherResp) ProtoMessage() {}

func (x *SaveGopherResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpcapi_grpcapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveGopherResp.ProtoReflect.Descriptor instead.
func (*SaveGopherResp) Descriptor() ([]byte, []int) {
	return file_api_grpcapi_grpcapi_proto_rawDescGZIP(), []int{1}
}

func (x *SaveGopherResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetGopherReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetGopherReq) Reset() {
	*x = GetGopherReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpcapi_grpcapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGopherReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGopherReq) ProtoMessage() {}

func (x *GetGopherReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpcapi_grpcapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGopherReq.ProtoReflect.Descriptor instead.
func (*GetGopherReq) Descriptor() ([]byte, []int) {
	return file_api_grpcapi_grpcapi_proto_rawDescGZIP(), []int{2}
}

func (x *GetGopherReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetGopherResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetGopherResp) Reset() {
	*x = GetGopherResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpcapi_grpcapi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGopherResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGopherResp) ProtoMessage() {}

func (x *GetGopherResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpcapi_grpcapi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGopherResp.ProtoReflect.Descriptor instead.
func (*GetGopherResp) Descriptor() ([]byte, []int) {
	return file_api_grpcapi_grpcapi_proto_rawDescGZIP(), []int{3}
}

func (x *GetGopherResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetGopherResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_api_grpcapi_grpcapi_proto protoreflect.FileDescriptor

var file_api_grpcapi_grpcapi_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72,
	0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x33, 0x0a, 0x0d, 0x53,
	0x61, 0x76, 0x65, 0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x20, 0x0a, 0x0e, 0x53, 0x61, 0x76, 0x65, 0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x1e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x33, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0x6a, 0x0a, 0x0d, 0x47, 0x6f, 0x70, 0x68, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x0a, 0x53, 0x61, 0x76, 0x65,
	0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x12, 0x0e, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x47, 0x6f, 0x70,
	0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x47, 0x6f, 0x70,
	0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x47, 0x6f,
	0x70, 0x68, 0x65, 0x72, 0x12, 0x0d, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x70, 0x68, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x42, 0x13, 0x5a, 0x11, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_grpcapi_grpcapi_proto_rawDescOnce sync.Once
	file_api_grpcapi_grpcapi_proto_rawDescData = file_api_grpcapi_grpcapi_proto_rawDesc
)

func file_api_grpcapi_grpcapi_proto_rawDescGZIP() []byte {
	file_api_grpcapi_grpcapi_proto_rawDescOnce.Do(func() {
		file_api_grpcapi_grpcapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_grpcapi_grpcapi_proto_rawDescData)
	})
	return file_api_grpcapi_grpcapi_proto_rawDescData
}

var file_api_grpcapi_grpcapi_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_grpcapi_grpcapi_proto_goTypes = []interface{}{
	(*SaveGopherReq)(nil),  // 0: SaveGopherReq
	(*SaveGopherResp)(nil), // 1: SaveGopherResp
	(*GetGopherReq)(nil),   // 2: GetGopherReq
	(*GetGopherResp)(nil),  // 3: GetGopherResp
}
var file_api_grpcapi_grpcapi_proto_depIdxs = []int32{
	0, // 0: GopherService.SaveGopher:input_type -> SaveGopherReq
	2, // 1: GopherService.GetGopher:input_type -> GetGopherReq
	1, // 2: GopherService.SaveGopher:output_type -> SaveGopherResp
	3, // 3: GopherService.GetGopher:output_type -> GetGopherResp
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_grpcapi_grpcapi_proto_init() }
func file_api_grpcapi_grpcapi_proto_init() {
	if File_api_grpcapi_grpcapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_grpcapi_grpcapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveGopherReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpcapi_grpcapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveGopherResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpcapi_grpcapi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGopherReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpcapi_grpcapi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGopherResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_grpcapi_grpcapi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_grpcapi_grpcapi_proto_goTypes,
		DependencyIndexes: file_api_grpcapi_grpcapi_proto_depIdxs,
		MessageInfos:      file_api_grpcapi_grpcapi_proto_msgTypes,
	}.Build()
	File_api_grpcapi_grpcapi_proto = out.File
	file_api_grpcapi_grpcapi_proto_rawDesc = nil
	file_api_grpcapi_grpcapi_proto_goTypes = nil
	file_api_grpcapi_grpcapi_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GopherServiceClient is the client API for GopherService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GopherServiceClient interface {
	SaveGopher(ctx context.Context, in *SaveGopherReq, opts ...grpc.CallOption) (*SaveGopherResp, error)
	GetGopher(ctx context.Context, in *GetGopherReq, opts ...grpc.CallOption) (*GetGopherResp, error)
}

type gopherServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGopherServiceClient(cc grpc.ClientConnInterface) GopherServiceClient {
	return &gopherServiceClient{cc}
}

func (c *gopherServiceClient) SaveGopher(ctx context.Context, in *SaveGopherReq, opts ...grpc.CallOption) (*SaveGopherResp, error) {
	out := new(SaveGopherResp)
	err := c.cc.Invoke(ctx, "/GopherService/SaveGopher", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gopherServiceClient) GetGopher(ctx context.Context, in *GetGopherReq, opts ...grpc.CallOption) (*GetGopherResp, error) {
	out := new(GetGopherResp)
	err := c.cc.Invoke(ctx, "/GopherService/GetGopher", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GopherServiceServer is the server API for GopherService service.
type GopherServiceServer interface {
	SaveGopher(context.Context, *SaveGopherReq) (*SaveGopherResp, error)
	GetGopher(context.Context, *GetGopherReq) (*GetGopherResp, error)
}

// UnimplementedGopherServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGopherServiceServer struct {
}

func (*UnimplementedGopherServiceServer) SaveGopher(context.Context, *SaveGopherReq) (*SaveGopherResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveGopher not implemented")
}
func (*UnimplementedGopherServiceServer) GetGopher(context.Context, *GetGopherReq) (*GetGopherResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGopher not implemented")
}

func RegisterGopherServiceServer(s *grpc.Server, srv GopherServiceServer) {
	s.RegisterService(&_GopherService_serviceDesc, srv)
}

func _GopherService_SaveGopher_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveGopherReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GopherServiceServer).SaveGopher(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GopherService/SaveGopher",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GopherServiceServer).SaveGopher(ctx, req.(*SaveGopherReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GopherService_GetGopher_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGopherReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GopherServiceServer).GetGopher(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GopherService/GetGopher",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GopherServiceServer).GetGopher(ctx, req.(*GetGopherReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _GopherService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GopherService",
	HandlerType: (*GopherServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaveGopher",
			Handler:    _GopherService_SaveGopher_Handler,
		},
		{
			MethodName: "GetGopher",
			Handler:    _GopherService_GetGopher_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/grpcapi/grpcapi.proto",
}
